import widget as w
import tkinter as tk
import analysis as an


def parameter_state():
    for i in parameter:
        i.Change()
    
def setROI():
    ROIsetter.load(file_list.Get())
    LUX,LUY,RDX,RDY=ROIsetter.roiset()
    LUX_axis_entry.Set(LUX)
    LUY_axis_entry.Set(LUY)
    RDX_axis_entry.Set(RDX)
    RDY_axis_entry.Set(RDY)

def colorOption(x):
    if x=='紅色':
        H_low_entry.Change();H_low_entry.Set(26);H_low_entry.Change()
        H_high_entry.Change();H_high_entry.Set(35);H_high_entry.Change()
        S_low_entry.Change();S_low_entry.Set(43);S_low_entry.Change()
        S_high_entry.Change();S_high_entry.Set(255);S_high_entry.Change()
        V_low_entry.Change();V_low_entry.Set(46);V_low_entry.Change()
        V_high_entry.Change();V_high_entry.Set(255);V_high_entry.Change()
    elif x=='藍色':
        H_low_entry.Change();H_low_entry.Set(78);H_low_entry.Change()
        H_high_entry.Change();H_high_entry.Set(99);H_high_entry.Change()
        S_low_entry.Change();S_low_entry.Set(43);S_low_entry.Change()
        S_high_entry.Change();S_high_entry.Set(255);S_high_entry.Change()
        V_low_entry.Change();V_low_entry.Set(46);V_low_entry.Change()
        V_high_entry.Change();V_high_entry.Set(255);V_high_entry.Change()

    
root=tk.Tk()
ROIsetter=an.ROI()

frame1=tk.LabelFrame(root,text='匯入檔案',font=20);frame1.grid(row=0,column=0)
frame2=tk.LabelFrame(root,text='參數',font=20);frame2.grid(row=2,column=0)
frame3=tk.LabelFrame(root,text='開始訊號ROI',font=20);frame3.grid(row=1,column=0)


file_list=w.filelist(frame1,1,3)
input_button=w.button(frame1,'新增',file_list.Input,row=0,column=0,padx=6)
input_button=w.button(frame1,'刪除',file_list.Delete,row=0,column=1,padx=6)
input_button=w.button(frame1,'清除',file_list.Deleteall,row=0,column=2,padx=6)


blur_label=w.label(frame2,'模糊',row=0,column=0)
blur_entry=w.entry(frame2,varset=3,row=0,column=1)
threshold_label=w.label(frame2,'二值化',row=1,column=0)
threshold_entry=w.entry(frame2,row=1,varset=35,column=1)
color_label=w.label(frame2,'顏色',row=2,column=0)
color_optionmenu=w.optionmenu(frame2,colorOption,'紅色','藍色',row=2,column=1)
color_checkbutton=w.checkbutton(frame2,'自訂顏色',cmd=parameter_state,row=3,column=1,sticky=tk.E)


H_low_label=w.label(frame2,'低色相(H)',state='disable',row=4,column=0)
H_low_entry=w.entry(frame2,state='disable',row=4,column=1)
H_high_label=w.label(frame2,'高色相(H)',state='disable',row=5,column=0)
H_high_entry=w.entry(frame2,state='disable',row=5,column=1)
S_low_label=w.label(frame2,'低飽和(S)',state='disable',row=6,column=0)
S_low_entry=w.entry(frame2,state='disable',row=6,column=1)
S_high_label=w.label(frame2,'高飽和(S)',state='disable',row=7,column=0)
S_high_entry=w.entry(frame2,state='disable',row=7,column=1)
V_low_label=w.label(frame2,'低亮度(V)',state='disable',row=8,column=0)
V_low_entry=w.entry(frame2,state='disable',row=8,column=1)
V_high_label=w.label(frame2,'高亮度(V)',state='disable',row=9,column=0)
V_high_entry=w.entry(frame2,state='disable',row=9,column=1)
parameter=[H_low_entry,H_high_entry,H_low_label,H_high_label,
           S_low_entry,S_high_entry,S_low_label,S_high_label,
           V_low_entry,V_high_entry,V_low_label,V_high_label,
           color_label,color_optionmenu]

X_label=w.label(frame3,'X軸',row=0,column=1)
y_label=w.label(frame3,'Y軸',row=0,column=2)
LU_axis_label=w.label(frame3,'左上',row=1,column=0)
LUX_axis_entry=w.entry(frame3,vartype='double',row=1,column=1)
LUY_axis_entry=w.entry(frame3,vartype='double',row=1,column=2)
RD_axis_label=w.label(frame3,'右下',row=2,column=0)
RDX_axis_entry=w.entry(frame3,vartype='double',row=2,column=1)
RDY_axis_entry=w.entry(frame3,vartype='double',row=2,column=2)
set_button=w.button(frame3,'設定',setROI,row=3,columnspan=2,column=1,ipadx=30)

